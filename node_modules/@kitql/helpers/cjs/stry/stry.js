"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var stry_exports = {};
__export(stry_exports, {
  midTrim: () => midTrim,
  stry: () => stry,
  stry0: () => stry0,
  stryEq: () => stryEq
});
module.exports = __toCommonJS(stry_exports);
var import_safe_stable_stringify = require("./safe-stable-stringify.js");
function stry0(obj) {
  return stry(obj, 0);
}
function stry(obj, space = 2, replacer) {
  if (obj === null) {
    return null;
  }
  return (0, import_safe_stable_stringify.stringify)(obj, replacer, space);
}
function stryEq(obj1, obj2) {
  return stry0(obj1) === stry0(obj2);
}
function midTrim(str, o) {
  const len = o?.len || 21;
  if (str.length > len) {
    const midStr = o?.midStr || "...";
    const reducedLen = len - midStr.length;
    const trimLength = Math.floor(reducedLen / 2);
    return `${str.slice(0, trimLength).trim()}${midStr}${str.slice(-trimLength).trim()}`;
  }
  return str;
}
